#!/usr/bin/env ruby

require 'pathname'
require 'yaml'
require 'fileutils'

ACTIONS = %w[setup brew ruby gems]

DOTFILES = File.join(File.dirname(Pathname.new(__FILE__).realpath))
HOME = ENV['HOME']

Dir.chdir(DOTFILES)

config = YAML.load_file('config.yml')

def status(s)
  puts [s ? "\e[92m" : "\e[31", s, "\e[0m"].join
end

action = ARGV[0]
puts "Usage: dotfiles (#{ACTIONS.join('|')})" unless ACTIONS.include?(action)

if action == 'setup'
  print "Setup OSX settings: "
  status system("osx/setup")

  # Symlink *.symlink files
  Dir.glob('**/*.symlink').each do |f|
    filename = ".#{Pathname.new(f).basename('.*')}"
    src = File.join(DOTFILES, f)
    dst = File.join(HOME, filename)
    puts "Symlink #{dst}"
    FileUtils.ln_sf(src, dst)
  end

  # Install global apps (e.g. Brew)
  Dir.glob('**/install').each do |f|
    app = Pathname.new(f).dirname
    path = File.join(DOTFILES, f)
    print "Executing #{path}: "
    status system("#{path}")
  end
end

if action == 'brew'
  # Exec brew
  brew_path = File.join(DOTFILES, 'brew')
  Dir.chdir(brew_path) do
    print "Update homebrew recipes: "
    status system("brew update")
    print "Install homebrew recipes: "
    status system("brew bundle")
  end
end

if action == 'ruby'
  # Set global ruby version
  Dir.chdir(HOME) do
    current_version = `rbenv version`.split(' ').first
    version = config['ruby_version']
    if current_version != version
      print "Install ruby version #{version}: "
      status system("rbenv install -f #{version}")

      print "Set as global version: "
      status system("rbenv global #{version}")
    end
  end
end

if action == 'gems'
  # Gems gems
  # Need path to gem bin due to https://github.com/sstephenson/rbenv/issues/121
  gem_path = `rbenv shims`.match(/^.+\/gem$/)[0]
  `rbenv versions`.scan(/([0-9\.\-p]+)/).flatten.each do |ruby_version|
    config['global_gems'].each do |gem|
      print "Install global gem #{gem} for Ruby #{ruby_version}: "
      status system("RBENV_VERSION=\"#{ruby_version}\" RBENV_GEMSETS=\"global\" #{gem_path} install #{gem}")
    end
  end
  print "Rehash gems: "
  status system("rbenv rehash")
end
