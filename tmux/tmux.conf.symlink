# Allow xterm titles in terminal window, terminal scrolling with scrollbar, and setting overrides of C-Up, C-Down, C-Left, C-Right
set -g terminal-overrides "xterm*:XT:smcup@:rmcup@:kUP5=\eOA:kDN5=\eOB:kLFT5=\eOD:kRIT5=\eOC"

# Scroll History
set -g history-limit 30000

# Set ability to capture on start and restore on exit window data when running an application
setw -g alternate-screen on

# No escape time for vi mode
set -sg escape-time 0

# enable pbcopy under osx
# http://superuser.com/questions/231130/unable-to-use-pbcopy-while-in-tmux-session
# interface

# Enable mouse
set -g mode-mouse on
set -g mouse-select-window on
set -g mouse-select-pane on
set -g mouse-resize-pane on

# Enable VIM mode
setw -g mode-keys vi
set -g status-keys vi

# panes
set -g pane-border-fg brightblack
set -g pane-active-border-fg blue

# status on top
#set -g status-position top

# status line
set -g status-utf8 on
set -g status-justify left
set -g status-bg black
set -g status-fg white
set -g status-interval 4

# messaging
set -g message-fg black
set -g message-bg yellow
set -g message-command-fg blue
set -g message-command-bg black

#window mode
setw -g mode-bg colour6
setw -g mode-fg colour0

# window status
setw -g window-status-format "#[fg=colour8]#[bg=white] #I #[bg=colour8]#[fg=white] #W#F"
setw -g window-status-current-format "#[fg=black]#[bg=colour7] #I #[fg=black]#[bg=colour15] #W#F"
setw -g window-status-current-bg black
setw -g window-status-current-attr bold

# Info on righ
set -g status-right "#(/usr/bin/battery -t) #[fg=magenta]#(sysctl -n vm.loadavg | cut -d \" \" -f 2-4) #[fg=white]| #[fg=yellow]Tmux:#S #[fg=white]| #[fg=green]%Y-%m-%d #[fg=white]| #[fg=cyan]%A %H:%M | #[fg=default]I❤️ #[fg=default]Ruby"
set -g status-right-length 80

# Info on left (no session display)
set -g status-left ''

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# http://robots.thoughtbot.com/how-to-copy-and-paste-with-tmux-on-mac-os-x
set-option -g default-command "reattach-to-user-namespace -l zsh"

# bring vim back
bind -n C-z run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-z) || tmux send-keys 'fg' C-m"

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1

# Clear screen
bind C-k send-keys 'C-l'

# Open splits in current dir
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

